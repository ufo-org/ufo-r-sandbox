% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ufos.R
\name{ufo_complex}
\alias{ufo_complex}
\title{Produces a lazily populated UFO complex vector of the given length.
The vector will be populated on access section by section. The vector
will garbage collect chunks in response to memory pressure, so it can
be larger-than-memory.}
\usage{
ufo_complex(
  length,
  populate,
  writeback = NULL,
  reset = NULL,
  destroy = NULL,
  finalizer = NULL,
  user_data = NULL,
  read_only = FALSE,
  chunk_length = 0,
  ...
)
}
\arguments{
\item{length}{number of elements in the vector, must be > 1.}

\item{populate}{a function used to generate data inside the vector,}

\item{writeback}{a function called when a modified chunk of the vector
is garbage collected (optional).}

\item{reset}{a function called when a modified chunk is reset discarding
dirty, manually written values.}

\item{destroy}{a function called when a modified chunk is being destroyed}

\item{finalizer}{a function called when the entire vector is garbage
collected (optional).}

\item{read_only}{sets the vector to be write-protected by the OS
(optional, false by default).}

\item{chunk_length}{the minimum number of elements loaded at once,
will always be rounded up to a full memory page
(optional, a page by default).}

\item{...}{user data passed to populate, writeback, and finalizer functions,}
}
\value{
a lazily loaded complex vector of the specified length.
}
\description{
Produces a lazily populated UFO complex vector of the given length.
The vector will be populated on access section by section. The vector
will garbage collect chunks in response to memory pressure, so it can
be larger-than-memory.
}
